/** @module  extract-json */
import { Bundle, Transaction } from '../../types';
export declare const errors: {
    INVALID_JSON: string;
    INVALID_BUNDLE: string;
};
export { Bundle, Transaction };
/**
 * This method takes the `signatureMessageFragment` fields of all the given transaction trytes, and tries to extract any JSON data that's in them.
 *
 * The following forms of JSON-encoded values are supported:
 * - `"{ \"message\": \"hello\" }"`
 * - `"[1, 2, 3]"`
 * - `"true"`, `"false"` & `"null"`
 * - `"\"hello\""`
 * - `123`
 *
 * ## Related methods
 *
 * To get a bundle's transaction trytes from the Tangle, use the [`getBundle()`]{@link #module_core.getBundle} method.
 *
 * @method extractJson
 *
 * @summary Extracts JSON from transactions.
 *
 * @memberof module:extract-json
 *
 * @param {array} bundle - Transaction trytes
 *
 * @example
 * ```js
 * try {
 *   const json = JSON.parse(extractJson(bundle))
 * } catch (error) {
 *   console.log(error);
 * }
 * ```
 *
 * @return {string | number | null} The JSON data in the transactions
 *
 * @throws {errors.INVALID_BUNDLE}: Make sure that the `bundle` argument is an array of transaction trytes.
 * @throws {errors.INVALID_JSON}: Make sure that the transactions' `signatureMessageFragment` fields contain valid JSON.
 */
export declare const extractJson: (bundle: readonly Transaction[]) => string | number | null;
